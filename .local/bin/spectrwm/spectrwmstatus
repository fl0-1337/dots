#!/bin/sh

mail(){
unread="$(find "${XDG_DATA_HOME:-$HOME/.local/share}"/mail/*/[Ii][Nn][Bb][Oo][Xx]/new/* -type f | wc -l 2>/dev/null)"

icon="$(cat "/tmp/imapsyncicon_$USER" 2>/dev/null)"

[ "$unread" = "0" ] && [ "$icon" = "" ] || echo "üì¨ $unread$icon"
}

apt(){
	if [ ! -f /tmp/aptlist ]
	then	aptlist="--"
	else 	aptlist=$(cat /tmp/aptlist)
	fi

	[ "${aptlist}" != "0" ] && [ "${aptlist}" != "" ] && echo "[+@fn=1; üì¶+@fn=0;${aptlist} ]"

}

bat(){
	battery="/sys/class/power_supply/BAT0"
	cap=$(cat "${battery}"/capacity)
	stat=$(sed "s/Discharging/+@fn=1;üîã+@fn=0;/;s/Not charging/+@fn=1;üõë+@fn=0;/;s/Charging/+@fn=1;üîå+@fn=0;/;s/Unknown/+@fn=1;‚ôªÔ∏è+@fn=0;/;s/Full/+@fn=1;‚ö°+@fn=0;/" "$battery"/status)

	[ "$cap" -le 25 ] && [ "$status" = "üîã" ] && warn="‚ùó"

	printf "[ %s%s%s%% ]" "$stat" "$warn" "$cap"
	unset warn
}

cmus(){
if info=$(cmus-remote -Q 2> /dev/null); then
	status=$(echo "$info" | grep -v "set " | grep -v "tag " | grep "status " | cut -d ' ' -f 2)

	if [ "$status" = "playing" ] || [ "$status" = "paused" ] || [ "$status" = "stopped" ]; then
		title=$(echo "$info" | grep -v 'set ' | grep " title " | cut -d ' ' -f 3-)
		artist=$(echo "$info" | grep -v 'set ' | grep " artist " | cut -d ' ' -f 3-)
		position=$(echo "$info" | grep -v "set " | grep -v "tag " | grep "position " | cut -d ' ' -f 2)
		duration=$(echo "$info" | grep -v "set " | grep -v "tag " | grep "duration " | cut -d ' ' -f 2)
		[[ "$duration" == "" ]] && duration=0

		if [ "$duration" -ge 0 ]; then
			pos_minutes=$(printf "%02d" $((position / 60)))
			pos_seconds=$(printf "%02d" $((position % 60)))

			dur_minutes=$(printf "%02d" $((duration / 60)))
			dur_seconds=$(printf "%02d" $((duration % 60)))

			info_string="($pos_minutes:$pos_seconds/$dur_minutes:$dur_seconds)"
		fi

		info_string="$artist - $title $info_string"

		if [ "$status" = "playing" ]; then
			echo "[ +@fg=1;‚ñ∂ ${info_string} +@fg=0;]"
		elif [ "$status" = "paused" ]; then
			echo "[+@fg=2;+@fn=1; ‚è∏ +@fn=0;${info_string} +@fg=0;]"
		elif [ "$status" = "stopped" ]; then
			echo ""
		else
			echo ""
		fi
	else
		echo ""
	fi
else
	echo ""
fi
}

cpu(){
	read cpu a b c previdle rest < /proc/stat
	prevtotal=$((a+b+c+previdle))

	sleep 0.5

	read cpu a b c idle rest < /proc/stat
	total=$((a+b+c+idle))

	cpu=$((100*( (total-prevtotal) - (idle-previdle) ) / (total-prevtotal) ))

	echo "[ ‚öô${cpu}% ]"

}

disk(){
	rootfree=$(df -h | awk '$6=="/"{print $4}')
	homefree=$(df -h | awk '$6=="/home"{print $4}')

	roottest=$(df -m | awk '$6=="/"{printf "%1.0f\n", $4/1024}')
	hometest=$(df -m | awk '$6=="/home"{printf "%1.0f\n", $4/1024}')

	[ $hometest -lt 5 ] || [ $roottest -lt 1 ] && fg="+@fg=2;" || fg="+@fg=0;"

	echo  "[$fg+@fn=1; üñ• +@fn=0; ${rootfree}  +@fn=1;üè†+@fn=0;${homefree} +@fg=0; ]"
	# echo  "[ üñ• ${rootfree} ]"
	# echo  "[$fg+@fn=1; üè† +@fn=0;${homefree}+@fg=0; ]"
}



mounts(){
	mounted=$(df -h | awk '$1~/\/dev|mtp/&&$1!~/sda/{printf "%s (%s) ",$6,$4}')

	[ ! -z "${mounted}" ] && echo "[+@fn=1; ‚éÜ +@fn=0; ${mounted}]"
}

inet(){
	[ "$(cat /sys/class/net/w*/operstate)" = 'down' ] && wifiicon="üì°" ||
		wifiicon=$(grep "^\s*w" /proc/net/wireless | awk '{ print "+@fn=1; üì∂+@fn=0;", int($3 * 100 / 70) "%" }')

	printf "[ %s %s ]" "$wifiicon"
}
pomodoro(){
if [ -f /tmp/pomo ]
then
	[ "$(pgrep -x pomodoro)" = "" ] && rm /tmp/pomo
	mins=$(awk '{print int($2/60)}' /tmp/pomo)
	secs=$(awk '{print int($2%60)}' /tmp/pomo)
	[ $mins -le 9 ] && mins="0${mins}"
	[ $secs -le 9 ] && secs="0${secs}"

	case $(awk '{print $1}' /tmp/pomo) in
		"work") fg="+@fg=1;";;
		"break") fg="+@fg=2;";;
		"bigbreak") fg="+@fg=3;";;
	esac

	echo "[$fg+@fn=1; ‚è±Ô∏è +@fn=0;$mins:$secs+@fg=0; ]"
fi
}

ram(){
	mem=$(free -h | awk '$1~/Mem/{print $3}')
	swap=$(free -h | awk '$1~/Swap/{print $3}')

	if [ "${swap}" == "0" ] || [ "${swap}" == "0B" ]
	then 	echo "[ üß† ${mem} ]" | tr -d i
	else 	echo "[ +@fn=1; üß† +@fn=0; ${mem}"\|\|"${swap} ]" |tr -d i
	fi

}

vol(){
	getVolume=$(amixer get Master state | sed -e "s/\[//;s/\]//" | awk '$1=="Front"&&$2=="Left:"{print $5}')
	getState=$(amixer get Master state | awk '$1=="Front"&&$2=="Left:"{print $6}')

	if [ "$getState" = "[off]" ]
	then 	echo "[+@fn=1; üîá +@fn=0;]"
	else	echo "[+@fn=1; üîà+@fn=0; ${getVolume} ]"
		fi
	}

while true
do
	echo "$(cmus)$(pomodoro)$(apt)$(mounts)$(mail)$(disk)$(ram)$(cpu)$(bat)$(vol)$(inet)"
    sleep 1s
done
